# Set environment
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins/zen'

# Override LC and LANG
set-environment -g LANG 'en_US.UTF-8'
set-environment -g LC_ALL 'en_US.UTF-8'
set-environment -g LC_CTYPE 'en_US.UTF-8'

# No plugins for zen mode - truly minimal
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
# Dracula theme - no plugin needed, configured manually

set-option -sa terminal-overrides ",xterm*:Tc"
set -g mouse on

# Set the prefix to Ctrl+Space
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# nested tmux, obey me
bind-key Space send-prefix

## tmux prefix highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_prefix_prompt 'PRE'
set -g @prefix_highlight_copy_prompt 'COPY'
set -g @prefix_highlight_sync_prompt 'SYNC'
set -g @prefix_highlight_empty_prompt 'TMUX'

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# mouse support - off by default
set -g mouse off

# mouse toggle with status display
unbind-key m ; bind-key m if-shell '[ "$(tmux show -gv mouse)" = "on" ]' 'set -g mouse off; display-message "Mouse: OFF"' 'set -g mouse on; display-message "Mouse: ON"'

# proper mouse scrolling
bind -T copy-mode-vi WheelUpPane send -N 5 -X scroll-up
bind -T copy-mode-vi WheelDownPane send -N 5 -X scroll-down

# enable scrolling with mouse wheel in normal mode
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -et='"

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# set vi-mode
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# clipboard integration
# Linux clipboard support
if-shell 'command -v xclip' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"'
if-shell 'command -v xsel' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -ib"'

# macOS clipboard support
if-shell 'command -v pbcopy' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"'

# Windows clipboard support (WSL)
if-shell 'command -v clip.exe' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"'

# Mouse selection copies to clipboard
if-shell 'command -v xclip' \
  'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"'
if-shell 'command -v xsel' \
  'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -ib"'
if-shell 'command -v pbcopy' \
  'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"'
if-shell 'command -v clip.exe' \
  'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"'

# Paste from clipboard
bind-key C-v run-shell "xclip -o -sel clipboard | tmux load-buffer - ; tmux paste-buffer"

# new window and retain cwd
bind-key c new-window -c "#{pane_current_path}"

# rename window
unbind-key r        ; bind-key r        command-prompt -I "#W" "rename-window '%%'"

bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Source setup file
bind-key R source-file ~/.config/tmux/tmux-zen.conf \; display-message 'Reloaded ~/.config/tmux/tmux-zen.conf'

# Theming - Dracula
set -g @dracula_bg "#282a36"
set -g @dracula_current_line "#44475a"
set -g @dracula_fg "#f8f8f2"
set -g @dracula_comment "#6272a4"
set -g @dracula_cyan "#8be9fd"
set -g @dracula_green "#50fa7b"
set -g @dracula_orange "#ffb86c"
set -g @dracula_pink "#ff79c6"
set -g @dracula_purple "#bd93f9"
set -g @dracula_red "#ff5555"
set -g @dracula_yellow "#f1fa8c"
set -g status-right-length 100
set -g status-left-length 100

# status line - minimal but informative
set -g status on
set -g status-interval 2
set -g status-justify centre
set -g status-left-length 50
set -g status-right-length 50
set -g status-left "#{?client_prefix,#[bg=#50fa7b]#[fg=#282a36] PREFIX #[bg=#282a36]#[fg=#f8f8f2] ,}#[fg=#8be9fd]#(whoami)#[fg=#f8f8f2]@#[fg=#ff79c6]#h|#[fg=#f1fa8c]#{pane_current_path} "
set -g status-right " #[fg=#f8f8f2]%H:%M "
set -g status-style "bg=#282a36,fg=#f8f8f2"

# windows - minimal
set -g window-status-format " #I:#W "
set -g window-status-current-format "#[bg=#bd93f9,fg=#282a36] #I:#W "

# Window style settings
set -g window-status-separator ''

# To start with 3 windows, use:
# tmux -f ~/.config/tmux/tmux-zen.conf new-session -s zen -n main \; new-window -n dev \; new-window -n other \; select-window -t 1

# vim: ft=tmux ts=2 sw=2 sts=2 et
